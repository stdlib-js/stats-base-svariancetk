{"version":3,"file":"index.mjs","sources":["../lib/ndarray.js","../lib/svariancetk.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport float64ToFloat32 from '@stdlib/number-float64-base-to-float32';\n\n\n// MAIN //\n\n/**\n* Computes the variance of a single-precision floating-point strided array using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float32Array} x - input array\n* @param {integer} strideX - stride length\n* @param {NonNegativeInteger} offsetX - starting index\n* @returns {number} variance\n*\n* @example\n* import Float32Array from '@stdlib/array-float32';\n*\n* var x = new Float32Array( [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0 ] );\n*\n* var v = svariancetk( 4, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction svariancetk( N, correction, x, strideX, offsetX ) {\n\tvar S2;\n\tvar ix;\n\tvar S;\n\tvar v;\n\tvar n;\n\tvar i;\n\n\tn = N - correction;\n\tif ( N <= 0 || n <= 0.0 ) {\n\t\treturn NaN;\n\t}\n\tif ( N === 1 || strideX === 0 ) {\n\t\treturn 0.0;\n\t}\n\tix = offsetX;\n\tS2 = 0.0;\n\tS = 0.0;\n\tfor ( i = 0; i < N; i++ ) {\n\t\tv = x[ ix ];\n\t\tS2 = float64ToFloat32( S2 + float64ToFloat32( v*v ) );\n\t\tS = float64ToFloat32( S+v );\n\t\tix += strideX;\n\t}\n\treturn float64ToFloat32( float64ToFloat32(S2 - float64ToFloat32(float64ToFloat32(S/N)*S)) / n ); // eslint-disable-line max-len\n}\n\n\n// EXPORTS //\n\nexport default svariancetk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport stride2offset from '@stdlib/strided-base-stride2offset';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\n/**\n* Computes the variance of a single-precision floating-point strided array using a one-pass textbook algorithm.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {Float32Array} x - input array\n* @param {integer} strideX - stride length\n* @returns {number} variance\n*\n* @example\n* import Float32Array from '@stdlib/array-float32';\n*\n* var x = new Float32Array( [ 1.0, -2.0, 2.0 ] );\n*\n* var v = svariancetk( x.length, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction svariancetk( N, correction, x, strideX ) {\n\treturn ndarray( N, correction, x, strideX, stride2offset( N, strideX ) );\n}\n\n\n// EXPORTS //\n\nexport default svariancetk;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport setReadOnly from '@stdlib/utils-define-nonenumerable-read-only-property';\nimport svariancetk from './svariancetk.js';\nimport ndarray from './ndarray.js';\n\n\n// MAIN //\n\nsetReadOnly( svariancetk, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nexport default svariancetk;\n"],"names":["svariancetk","N","correction","x","strideX","offsetX","S2","ix","S","v","n","i","NaN","float64ToFloat32","ndarray","stride2offset","setReadOnly"],"mappings":";;sUA6CA,SAASA,EAAaC,EAAGC,EAAYC,EAAGC,EAASC,GAChD,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAGJ,GADAD,EAAIT,EAAIC,EACHD,GAAK,GAAKS,GAAK,EACnB,OAAOE,IAER,GAAW,IAANX,GAAuB,IAAZG,EACf,OAAO,EAKR,IAHAG,EAAKF,EACLC,EAAK,EACLE,EAAI,EACEG,EAAI,EAAGA,EAAIV,EAAGU,IACnBF,EAAIN,EAAGI,GACPD,EAAKO,EAAkBP,EAAKO,EAAkBJ,EAAEA,IAChDD,EAAIK,EAAkBL,EAAEC,GACxBF,GAAMH,EAEP,OAAOS,EAAkBA,EAAiBP,EAAKO,EAAiBA,EAAiBL,EAAEP,GAAGO,IAAME,EAC7F,CCzBA,SAASV,EAAaC,EAAGC,EAAYC,EAAGC,GACvC,OAAOU,EAASb,EAAGC,EAAYC,EAAGC,EAASW,EAAed,EAAGG,GAC9D,CClBAY,EAAAhB,EAAA,UAAAc"}